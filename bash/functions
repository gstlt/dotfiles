function parse_git_branch {
    RED="\[\033[0;31m\]"
    YELLOW="\[\033[0;33m\]"
    GREEN="\[\033[0;32m\]"
    BLUE="\[\033[0;34m\]"
    LIGHT_RED="\[\033[1;31m\]"
    LIGHT_GREEN="\[\033[1;32m\]"
    WHITE="\[\033[1;37m\]"
    LIGHT_GRAY="\[\033[0;37m\]"
    COLOR_NONE="\[\e[0m\]"
    git rev-parse --git-dir &> /dev/null
    git_status="$(git status 2> /dev/null)"
    branch_pattern="On branch ([^${IFS}]*)"
    remote_pattern="# Your branch is (.*) of"
    diverge_pattern="# Your branch and (.*) have diverged"
    if [[ ! ${git_status}} =~ "working tree clean" ]]; then
        #state="${RED}⚡"
        state="⚡"
    fi
    # add an else if or two here if you want to get more specific
    if [[ ${git_status} =~ ${remote_pattern} ]]; then
        if [[ ${BASH_REMATCH[1]} == "ahead" ]]; then
            #remote="${YELLOW}↑"
            remote="↑"
        else
            #remote="${YELLOW}↓"
            remote="↓"
        fi
    fi
    if [[ ${git_status} =~ ${diverge_pattern} ]]; then
        #remote="${YELLOW}↕"
        remote="↕"
    fi
    if [[ ${git_status} =~ ${branch_pattern} ]]; then
        branch=${BASH_REMATCH[1]}
        echo "(${branch})${remote}${state}"
    fi
}
# added parse_git_branch into PS1 ...
PS1='\[\033[01;32m\]\u\[\033[01;34m\]\w\[\033[31m\]$(parse_git_branch)\[\033[01;34m\]$\[\033[00m\] '

# mkdir and cd to a new dir
function mkdircd () { mkdir -p "$@" && eval cd "\"\$$#\""; }
